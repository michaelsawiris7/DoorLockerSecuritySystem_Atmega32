/*
 * TIMER1.c
 *
 *  Created on: Mar 27, 2024
 *      Author: Admin
 */




#include "TIMER1.h"
static  volatile void (*g_callBackPtr)(void) = NULL_PTR;    //Pointer to [ void function (void) ]

ISR(TIMER1_OVF_vect)
{
	if(g_callBackPtr != NULL_PTR)
	{
		/* Call the Call Back function in the application after the edge is detected */
		(*g_callBackPtr)(); /* another method to call the function using pointer to function g_callBackPtr(); */
	}

}
ISR(TIMER1_COMPA_vect)
{
	if(g_callBackPtr != NULL_PTR)
	{
		/* Call the Call Back function in the application after the edge is detected */
		(*g_callBackPtr)(); /* another method to call the function using pointer to function g_callBackPtr(); */
	}

}


void TIMER1_INIT(const Timer1_ConfigType * Config_Ptr)
{
	//TCNT1=Config_Ptr->Initial_value;
	/*if((Config_Ptr->mode)==CTC_mode)
	{	TIMSK|=(1<<OCIE1A);
	    OCR1A=Config_Ptr->Compare_value;}*/
	TCTN1=Config_ptr->Initial_value;
	TIMSK|=(1<<TOIE1)|(1<<OCIE1A);
	TCCR1A = (1<<FOC1A)|(1<<FOC1B);
	OCR1A=Config_Ptr->Compare_value;
    TCCR1B |= (1 << CS11) | (1 << CS10);
	/*TIMSK|=(1<<TOIE1);
	TCCR1A = (1<<FOC1A)|(1<<FOC1B);
	TCCR1A=(TCCR1A&0xFC)|(Config_Ptr->mode &0x03);
	TCCR1B=(TCCR1B&0xE7)|(Config_Ptr->mode &0x18);
	TCCR1B=(TCCR1B&0xF8)|(Config_Ptr->prescaler &0x07);*/

}


void TIMER1_DeINIT(void)
{

	TCCR1A = 0;
	TCCR1B = 0;
	TCNT1 = 0;
	ICR1 = 0;

	TIMSK =0;

	g_callBackPtr = NULL_PTR;

}

void Timer1_setCallBack( volatile  void(*a_ptr)(void))
{
	g_callBackPtr =  a_ptr;

}
void StartTimer(void)
{
	TCNT1=0;
}
