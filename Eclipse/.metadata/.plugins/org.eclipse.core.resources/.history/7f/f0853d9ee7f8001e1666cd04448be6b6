/*
 * GPIO.c
 *
 *  Created on: Mar 22, 2024
 *      Author: Admin
 */


#include "GPIO.h"

void  DDR(uint8 Port,uint8 Pin,uint8 State)
{
	switch(Port)
	{
	case PA:
		if (Pin==total)
		{
			DDRA=State;
		}
		else
		{
			if(State == OUTPUT)
			{
				SET_BIT(DDRA,PIN);
			}
			else
			{
				CLEAR_BIT(DDRA,PIN);
			}
		}
		break;
//###############################################################################################################################
	case PB:
		if (Pin==total)
		{
			DDRB=State;
		}
		else
		{
			if(State == OUTPUT)
			{
				SET_BIT(DDRB,PIN);
			}
			else
			{
				CLEBR_BIT(DDRB,PIN);
			}
		}
		break;
//###############################################################################################################################
	case PC:
		if (Pin==total)
		{
			switch (State)
			{
				case INPUT:  DDRC=0x00; break;
				case OUTPUT: DDRC=0xFF;  break;
			}
		}
		else
		{
			switch (State)
			{
				case INPUT: DDRC&=~(1<<Pin); break;
				case OUTPUT:  DDRC|=(1<<Pin);  break;
			}
		}
	break;

	case PD:
		if (Pin==total)
		{
			switch (State)
			{
				case INPUT: DDRD=0x00; break;
				case OUTPUT: DDRD=0xFF;  break;
			}
		}
		else
		{
			switch (State)
			{
				case INPUT: DDRD&=~(1<<Pin); break;
				case OUTPUT:  DDRD|=(1<<Pin);  break;
			}
		}
	break;
	}

}
void  PORT (uint8 Port,uint8 Pin,uint8 data)
{
	switch(Port)
	{
	case PA:
		if (Pin==total)
		{

			PORTA=data;
			break;
		}
		else
		{
			switch (data)
			{
				case OFF:
				PORTA&=~(1<<Pin);
				break;
				case ON:
				PORTA|=(1<<Pin);
				break;
			}
		}
	break;

	case PB:
		if (Pin==total)
		{

		 PORTB=data;
		 break;

		}
		else
		{
			switch (data)
			{
				case OFF: PORTB&=~(1<<Pin); break;
				case ON:  PORTB|=(1<<Pin);  break;
			}
		}
	break;

	case PC:
		if (Pin==total)
		{

		 PORTC=data;
		 break;

		}
		else
		{
			switch (data)
			{
				case OFF: PORTC&=~(1<<Pin); break;
				case ON:  PORTC|=(1<<Pin);  break;
			}
		}
	break;

	case PD:
		if (Pin==total)
		{

		 PORTD=data;
		 break;

		}
		else
		{
			switch (data)
			{
				case OFF: PORTD&=~(1<<Pin); break;
				case ON:  PORTD|=(1<<Pin);  break;
			}
		}
	break;
	}
}
uint8 PIN  (uint8 Port,uint8 Pin)
{
	volatile uint8 RET;
	switch(Port)
	{
	case PA:
		if(Pin==total)
		{
		RET=PINA;
		}
		else
		{
		RET=GET_BIT(PINA,Pin);
		}
		break;
	case PB:
		if(Pin==total)
		{
		RET=PINB;
		}
		else
		{
		RET=GET_BIT(PINB,Pin);  //PINB&(1<<pi);
		}
		break;
	case PC:
		if(Pin==total)
		{
		RET=PINC;
		}
		else
		{
		RET=GET_BIT(PINC,Pin);
		}
		break;
	case PD:
		if(Pin==total)
		{
		RET=PIND;
		}
		else
		{
		RET=GET_BIT(PIND,Pin);
		}
		break;
	}
	return RET;
}

